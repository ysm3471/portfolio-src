{
  "data":[
    {
      "id":1,
      "title":"Youtube",
      "content":"제가 처음으로 만들었던 사이트입니다. 작업기간은 약 2주정도 소요되었고 사용한 기술은 HTML 5입니다.\n\n당시에 배웠던 flex를 사용하여 레이아웃을 잡아보는 것을 목표로 만든 사이트이며, positoin:absolute를 사용하지 않고 element의 위치를 조정해본 경험은 당시에는 힘들었지만 큰 도움이 되었습니다",
      "useSkills":"HTML 5",
      "img":"img/Detail/youtube.png",
      "category":"Copy Site",
      "github":"https://github.com/ysm3471/youtube-first",
      "site":"https://ysm3471.github.io/youtube-first/",
      "slider":false
    },
    {
      "id":2,
      "title":"LINE",
      "content":"실제 기업 홈페이지의 코드를 참고하여 만든 사이트입니다. 링크로 이동하는 기능을 제외한 모든 기능을 구현하였으며 서브페이지로 2개의 사이트가 있습니다.\n\n자바스크립트를 이용한 기능은 총 3가지입니다. 스크롤 위치에 따른 Nav바의 css조정, 언어 토글버튼, 서비스목록 nav바의 sort. 실제 기업에서 일하는 다른 사람들이 어떻게 css를 활용하는지 배울 수 있었습니다.",
      "useSkills":"JavaScript",
      "img":["img/Detail/Line-1.png","img/Detail/Line-2.png","img/Detail/Line-3.png"],
      "category":"Copy Site",
      "github":"https://github.com/ysm3471/line-copysite-JS",
      "site":["https://ysm3471.github.io/line-copysite-JS/line","https://ysm3471.github.io/line-copysite-JS/line/sub_site1.html","https://ysm3471.github.io/line-copysite-JS/line/sub_site2.html"],
      "slider":true
    },
    {
      "id":3,
      "title":"LINE(MB)",
      "content":"앞에서 만들었던 LINE의 적응형 모바일 페이지입니다.\n\nLINE pc 홈페이지의 경우 지정된 width를 사용하여 레이아웃을 유지하기가 쉬웠으나, 모바일 홈페이지는 사용자의 viewport 크기와 관계없이 꽉 찬 화면을 보여줘야합니다. 거기에 현재 시청하는 기기의 width에 따라서 요소의 위치가 적절하게 이동하거나 사이즈를 변경해야 하기 때문에 부모 영역의 크기를 변경 가능하게 해야하고 자식요소들이 그 영역을 벗어나지 않게 해야합니다. \n\n그런 부분들을 조정하면서 부모, 자식요소들의 영역 크기를 어떻게 컨트롤 해야하는지 많이 배웠습니다",
      "useSkills":"JavaScript", 
      "img":["img/Detail/Line-mb-1.png","img/Detail/Line-mb-2.png","img/Detail/Line-mb-3.png"],
      "category":"Copy Site",
      "github":"https://github.com/ysm3471/line-mb",
      "site":["https://ysm3471.github.io/line-mb/line(mb)/","https://ysm3471.github.io/line-mb/line(mb)/sub_site1.html","https://ysm3471.github.io/line-mb/line(mb)/sub_site2.html"],
      "slider":true
    },
    {
      "id":4,
      "title":"여행사이트",
      "content":"Team Project를 통해 만든 반응형 사이트이며 저는 3개의 페이지를 담당했습니다.\n\n창 크기에 따라 요소들의 위치가 변경되야 하기 때문에 레이아웃을 어떻게 짤까 고민하던 중, Airbnb의 사이트를 참고해서 grid를 사용해 보았습니다. 슬라이더는 Swiper의 디자인을 변경하여 사용하였습니다.\n\ngrid의 장점은 부모요소의 영역 안의 자식요소들을 컨트롤하기가 매우 쉬워진다는 것입니다. 반응형 사이트의 경우 화면 크기에 따라 요소들의 위치 혹은 크기가 계속 변경되어야 하는데, grid는 그런 부분에서 세세하게 css를 변경할 수고를 많이 덜어주었습니다.\n\n기능적인 부분으로는 태그와 정렬 기준을 사용한 sort기능이 있습니다. 사용자의 편의성을 생각하여 다양한 상황에서도 기능이 동작하도록 신경썼습니다.",
      "useSkills":"JavaScript",
      "img":["img/Detail/team4.png","img/Detail/team1.png","img/Detail/team2.png","img/Detail/team3.png"],
      "category":"Team Project",
      "github":"https://github.com/ysm3471/TeamProject",
      "site":["https://ysm3471.github.io/TeamProject/","https://ysm3471.github.io/TeamProject/product/sub1.html","https://ysm3471.github.io/TeamProject/product/sub2.html","https://ysm3471.github.io/TeamProject/product/sub3.html"],
      "slider":true
    },
    {
      "id":5,
      "title":"환율 정보 사이트",
      "content":"처음으로 외부 api를 사용해서 만들어본 사이트입니다. 이전에 배웠던 기능과 해보고싶었던 기능들을 전부 넣어봤습니다. \n\n만든 기능들은 검색기능, 페이지네이션, 북마크기능입니다. 각 국가의 정보는 json파일로 저장하여 페이지 로딩시에 불러온 뒤 저장하고, 저장된 정보는 배열형태로 정리하여 page를 이동하거나 검색을 할 때마다 새로 리스트를 만드는 형식입니다. 북마크는 localStorage를 사용하여 페이지를 종료해도 개인pc에 남아있게끔 설정하였습니다. \n\nfetch를 사용하여 api와 통신하였는데 해당 사이트가 주말과 공휴일, 9시부터 18시 이외에는 데이터를 제공하지 않고 오전 11시 이후에야 오늘의 정보가 갱신이 되는 구조였습니다. 때문에 사용자 입장에서 올바른 정보를 확인할 수 있도록 api 데이터 쿼리의 조건 중 날짜를 설정하는 부분에 있어서 신경을 많이 썼습니다\n\n또한 api를 불러오는 과정에서 CORS 에러가 발생했었습니다. 자체 서버를 만들어서 미들웨어를 사용하는 방법도 있었지만 배포 시에는 사용할 수 없었기 때문에 어떻게 처리해야 하는지 골머리를 앓다가 netlify에서 proxy서버를 제공한다는 사실을 알게되어 문제를 해결하였습니다.",
      "useSkills":"JavaScript",
      "img":"img/Detail/fund.png",
      "category":"Self-made site",
      "github":"https://github.com/ysm3471/FundRateSite",
      "site":"https://precious-semolina-a73bea.netlify.app/",
      "slider":false
    },
    {
      "id":6,
      "title":"날씨 앱",
      "content":"React를 사용해서 만든 pwa형식의 사이트입니다. \n\n자바스크립트에서 공부했던 걸 React에서 적용해보는 걸 목표로 만든 사이트이며 외부라이브러리를 다양하게 사용해봤습니다.\n사용한 외부 라이브러리는 슬라이드에 Swiper, 토글 버튼에 Mui, 애니메이션으로 framer-motion, 지도에 KAKAO MAP입니다. \n\n제가 이 프로젝트의 코드를 작성하면서 신경쓴 것은 코드의 직관성과 간결함입니다. 코드가 너무 길어지지 않도록 컴포넌트 및 함수를 분할하였고, props로 전달하는 변수를 줄이기 위해서 대부분의 state 변수는 context를 통해 관리하였습니다. 또한 계산횟수를 최대한 줄이기 위해서 로딩 시에 받은 api 정보를 가공한 뒤 각각의 배열에 넣어서 context로 전달하였습니다.\n\n설정에 있는 개발자 설정을 사용하면 현재 날씨 상태에 따라 앱이 어떻게 변화하는지 볼 수 있습니다.",
      "useSkills":"React",
      "img":["img/Detail/weather1.png","img/Detail/weather2.png"],
      "category":"PWA",
      "github":"https://github.com/ysm3471/weather_app_Code",
      "site":["https://admirable-nougat-6e9532.netlify.app","https://admirable-nougat-6e9532.netlify.app"],
      "slider":true
    },
    {
      "id":7,
      "title":"음악 추천 사이트",
      "content":"Next js를 사용한 페이지입니다. 사용 방법은 구글링을 통해 공부했습니다.\n\nNext js의 버전이 작년에 바뀌면서 기본적인 폴더 설정 방법부터 내장 훅을 사용하는 법이나 경로까지 변경되었다는 사실을 뒤늦게 알아차린 탓에 제대로 된 사용법을 찾느라고 근 3일정도를 헤맸던 것 같습니다.  \n\n기존 React와 달리 SSR방식으로 작동하기 때문에 빌드 및 배포 과정에서도 무척 힘들었던 사이트입니다. window 함수나 외부 라이브러리 등등 다양한 곳에서 에러가 발생하였고 SSR 방식에 대해 어느정도 이해한 뒤에야 오류들을 수정할 수 있었습니다.\n\nFirebase의 Realtime DB를 사용하였고 로그인은 Next-auth를 이용하여 Naver 로그인과 연결하였습니다. 글을 작성하기 위한 text-editor는 react-quill에 기능을 추가하여 사용하였습니다(유튜브 영상의 공유 링크를 붙여넣으면 iframe 형식으로 변화시켜줍니다). 검색과 댓글, 추천 기능은 Firebase 자체의 문제 때문에 구현하지 않았습니다.",
      "useSkills":"Next js",
      "img":["img/Detail/music1.png","img/Detail/music2.png","img/Detail/music3.png","img/Detail/music4.png"],
      "category":"Self-made site",
      "github":"https://github.com/ysm3471/website",
      "site":["https://website-eight-cyan-86.vercel.app/","https://website-eight-cyan-86.vercel.app/korea","https://website-eight-cyan-86.vercel.app/korea/-NYqTcUTKqxUei8VtL7u","https://website-eight-cyan-86.vercel.app/korea"],
      "slider":true
    },
    {
      "id":8,
      "title":"채팅 사이트",
      "content":"React-router와 React Query의 활용을 목적으로 만든 채팅 사이트입니다. \n\nFirebase의 내장 함수와 React Query를 사용하여 db에 새로운 글이 등록되면 refetching이 일어나 실시간으로 채팅이 가능합니다. \n\n회원가입 정보는 Firebase에 저장하고 로그인 정보는 react-cookie를 사용하여 사이트 Cookie에 저장합니다.\n\n정보를 보내고 수신하는 모든 과정이 동기적으로 일어날 수 있도록 코드를 신경써서 작성했습니다.",
      "useSkills":"React",
      "img":["img/Detail/chat1.png","img/Detail/chat2.png","img/Detail/chat3.png"],
      "category":"Self-made site",
      "github":"https://github.com/ysm3471/chatting-src",
      "site":["https://preeminent-florentine-36f151.netlify.app","https://preeminent-florentine-36f151.netlify.app","https://preeminent-florentine-36f151.netlify.app"],
      "slider":true
    }
  ]
}